Avvio applicazione:
- Scaricare da il seguente link il l'immagine di docker:
        ...
- Se ci si trova su un sistema UNIX, lanciare l'applicazione con lo script "run.sh".
- Altrimenti se ci si trova un altro sistema digitare nel terminale il comando:
        ...

Gestione dell'applicazione:
- Il file "config.yaml" permette di:
    - Indicare un tempo massimo per lo svolgimento della prova, il valore è esperesso in minuti, per indicare che la
      prova non ha un tempo massimo il valore deve essere posto a "0".
    - Penalità in caso di risposta sbagliata nelle domande a risposta multipla, da notare che ogni risposta corretta
      vale "1".
    - Tipo, difficuoltà e numero delle domande.
- La cartella "questions" contiene tutte le domande che possono essere sottomesse all'utente, esse sono suddivise per
  tipo, e successivamente per categoria.
    - Domande a risposta aperta e chiusa: per ogni categoria è presente un singolo file che contiene tutte le domande
      per quella categoria, al suo interno le domande sono a loro volta suddivise in "paragrafi" per difficolta,
      per ogni difficoltà è possibile definire il "peso" delle domande di quella categoria, il valore del peso è un
      numero intero positivo arbitrario.
      In questi file le righe vuote vengono ignorate, quelle che contengono con "--" definiscono la difficoltà di quelle
      che seguiranno e quelle che invece contengono solo " indicano il testo della domanda.
      Nelle domande a risposta multipla il carattere "+" indica che l'opzione è da considerare corretta, mentre "-"
      sbagliata.
    - Domande sulla progarramzione (java / python): per ogni categoria sono presenti più file, uno per ogni esercizio,
      le informazioni sulla difficoltà e il testo della domanda DEVONO essere inserite nella prima riga e in quelle
      immediatamente successive, il testo della domanda può essere scritto su più righe.
        - Esercizi Python: Per testare l'esercizio usa la libreria "unittest" molto simile a "JUnit".
          E' necessario importare le eventuali classi / funzioni che si volgio eseguire dal file "RunningFile", che
          è il nome del file su cui verrà scritta.
        - Esercizi Java: In questo caso non viene usata nessuna libreria esterna per il testing, per questo è necessario
          formttare l'output nel seguente modo:
            - La prima riga (stampata) deve contenere sono i caratteri "." e "F", tanti "." quanti sono i test passati e
              tanti "F" quanti sono i test falliti.
            - Le altre righe verranno mostrate come "terminal output" e possono contenere qualunque messaggio.